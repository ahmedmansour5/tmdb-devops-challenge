# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies
      run: |
         cd ./tmdb-app/; npm ci
      
    - name: Run Build
      run: |
         cd ./tmdb-app/; npm run build --if-present
    
    - name: App Test 
      # We currently have no tests so I will keep it like this to avoid failures, but tests could be added later
      run: |
         cd ./tmdb-app/; npm test || true

# This Starts the CD Stage after the initial tests are done and deploys the code to the 2 backend servers in GCP

  Deploy_prod1:
    runs-on: [prod1]
    needs: [build]
    steps:
     
      - name: Deliver source code to prod
        uses: actions/checkout@v4
      
      - name: 'Stop current deployment'
        continue-on-error: true
        run: |
           docker compose -f tmdb-app/docker-compose.yml down || true

      - name: 'Start new deployment'
        continue-on-error: true
        run: |
           docker compose -f tmdb-app/docker-compose.yml up --build -d


  Deploy_prod2:
    runs-on: [prod2]
    needs: [Deploy_prod1]
    steps:
     
      - name: Deliver source code to prod
        uses: actions/checkout@v4
      
      - name: 'Stop current deployment'
        continue-on-error: true
        run: |
           docker compose -f tmdb-app/docker-compose.yml down || true

      - name: 'Start new deployment'
        continue-on-error: true
        run: |
           docker compose -f tmdb-app/docker-compose.yml up --build -d
